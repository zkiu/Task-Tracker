{"version":3,"sources":["FirebaseConfig.js","components/resumeBanner/BtnPortfolio.js","services/firebaseAuth/signOut.js","components/Navigation.js","pages/HomePage.js","components/ErrorForm.js","services/firebaseAuth/signIn.js","pages/LoginPage.js","services/user/createFBUserWithEmailandPass.js","services/user/createUserDoc.js","services/user/registerUser.js","pages/RegisterPage.js","components/TasksList.js","services/firebaseAuth/getCurrentAuthUser.js","services/task/useTaskList.js","services/general/containsBadChar.js","services/general/extractSearchKeywords.js","services/task/filterTask.js","pages/DashboardPage.js","services/user/getUserInfo.js","services/user/getCurrentUserInfo.js","services/task/getTaskObj.js","services/task/useEmployeeList.js","services/task/addTask.js","services/task/updateTask.js","services/task/addComment.js","components/TaskForm.js","services/task/loadMoreComments.js","components/CommentsList.js","components/CommentsSection.js","pages/TaskPage.js","pages/NotFoundPage.js","services/user/updateUserInfo.js","pages/EditUserPage.js","services/general/ProtectedRoute.js","services/firebaseAuth/useAuth.js","services/firebaseAuth/addAuthListener.js","App.js","services/user/useFirestoreUserDoc.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","functions","useEmulator","BtnPortfolio","setTimeout","element","document","querySelector","addEventListener","e","target","style","cssText","href","aria-describedby","tabIndex","className","Provider","value","id","signOut","a","auth","Error","Navigation","userObj","to","name","onClick","Home","isAuth","navigate","ErrorForm","prop","errorMessage","signIn","email","password","signInWithEmailAndPassword","result","Login","useState","loginUser","changeLoginUser","handleChange","onSubmit","preventDefault","then","user","catch","error","message","htmlFor","required","autoFocus","autoComplete","type","placeholder","onChange","createFBUserWithEmailandPass","createUserWithEmailAndPassword","newUserCredential","uid","createUserDoc","jobLevel","firestore","collection","doc","set","registerUser","alert","console","log","Register","passOne","passTwo","regData","setRegData","setErrorMessage","registrationInfo","useEffect","defaultValue","TasksList","filteredTasksArray","length","myTask","map","task","data-toggle","data-target","aria-expanded","aria-controls","title","taskId","stopPropagation","handleClick","taskName","aria-labelledby","data-parent","priority","dateDue","taskDescription","getCurrentAuthUser","currentUser","useTaskList","tasksCreator","useUserBelongToTask","tasksResponsible","arr","getHash","item","seenHash","Set","filter","has","add","removeDuplicateArr","userTypeFilter","userAuthObj","tasks","setTasks","tasksArray","unsubscribe","where","onSnapshot","snapshot","docs","data","serverTimestamps","obj","simpleDate","dateCreated","toDate","toISOString","slice","status","nameTaskCreator","nameTaskCreatorId","nameResponsible","nameResponsibleId","containsBadChar","str","test","extractSearchKeywords","searchTermArray","trim","toLowerCase","split","filterTask","taskList","searchCriteria","orderBy","orderedList","sort","b","Date","parse","orderByRecent","orderByDate","p1Array","elt","p2Array","orderByPriority","results","keyword","includes","searchByKeyword","DashboardPage","setOrderby","setSearchCriteria","undefined","aria-label","disabled","db","getUserInfo","userId","docReference","get","docSnapShot","exists","docData","getCurrentUserInfo","getTaskObj","taskRef","docRef","useEmployeeList","employees","setEmployees","usersArray","addTask","taskObj","tasksRef","docSnap","updateTask","update","addComment","comment","collectionRef","timestamp","FieldValue","serverTimestamp","newDocRef","TaskForm","setuserObj","setTaskObj","existingTaskObj","setExistingTaskObj","taskObjPresets","setTaskObjPresets","employeeL1List","data-key","employeeL2List","changeMenuColor","htmlElement","setAttribute","autoCommentBot","newComment","old","taskInfo","getTaskandSet","securedElements","querySelectorAll","attributes","setNamedItem","createAttribute","priorityMenus","statusMenus","buttonRef","hasAttribute","removeNamedItem","data-secured","selectedIndex","options","responsibleUserId","getAttribute","hidden","label","cols","rows","loadMoreComments","queryLimit","lastRetrievedDoc","incrementalQuery","limit","startAfter","lastComment","commentList","CommentsList","initialComments","setInitialComments","comments","setComments","setLastRetrievedDoc","isLoading","setIsLoading","existingComments","commentsArray","removeAttribute","commentJSX","toDateString","CommentsSection","setNewComment","handleSubmit","TaskPage","useParams","NotFound","updateUserInfo","ObjToBeSaved","EditUserPage","existingData","setExistingData","newData","setNewData","loadUserData","ProtectedRoute","children","useAuth","authUser","authInfo","setAuthInfo","callback","onAuthStateChanged","userCredential","App","setUserObj","useFirestoreUserDoc","HomePage","path","LoginPage","RegisterPage","default","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d1d1acc2.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\n// import 'firebase/analytics'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport 'firebase/functions'\r\nimport 'firebase/storage'\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: 'AIzaSyC4AqLcu0oB49R0374JDOr-CQJOIsfS8Yw',\r\n\tauthDomain: 'task-tracker-84155.firebaseapp.com',\r\n\tdatabaseURL: 'https://task-tracker-84155.firebaseio.com',\r\n\tprojectId: 'task-tracker-84155',\r\n\tstorageBucket: 'task-tracker-84155.appspot.com',\r\n\tmessagingSenderId: '383114024098',\r\n\tappId: '1:383114024098:web:08712aa4c5d195057333fb',\r\n\tmeasurementId: 'G-C9X0PD11Q6',\r\n}\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig)\r\n// firebase.analytics()\r\nfirebase.functions().useEmulator('http://localhost:5001')\r\n\r\n// export const provider = new firebase.auth.GoogleAuthProvider()\r\n// export const auth = firebase.auth()\r\n\r\nexport default firebase\r\n","/*\nPOPOUT Button component to link back to Kiu's portfolio\nhas the css, js, and html component\nTHis component enable a hovering action for the banner 'Return to Kiu's resume page'\n*/\nimport React from 'react'\nimport {FaRegCaretSquareLeft} from 'react-icons/fa'\nimport {IconContext} from 'react-icons'\nimport './btnPortfolio.css'\n\nexport default function BtnPortfolio() {\n\tsetTimeout(() => {\n\t\tlet element = document.querySelector('.return-pop-out')\n\t\telement.addEventListener('mouseenter', (e) => {\n\t\t\te.target.style.cssText =\n\t\t\t\t'-webkit-transform: translate(-205px, 0px);\ttransform: translate(-205px, 0px);'\n\t\t})\n\t\telement.addEventListener('mouseleave', (e) => {\n\t\t\te.target.style.cssText =\n\t\t\t\t'-webkit-transform: translate(0px, 0px);\ttransform: translate(0px, 0px);'\n\t\t})\n\t}, 4500)\n\n\treturn (\n\t\t<aside>\n\t\t\t<a\n\t\t\t\thref=\"https://zkiu.github.io/portfolio/\"\n\t\t\t\taria-describedby=\"return to resume link\"\n\t\t\t\ttabIndex=\"20\"\n\t\t\t\tclassName=\"return-pop-out\"\n\t\t\t>\n\t\t\t\t<IconContext.Provider value={{className: 'icon'}}>\n\t\t\t\t\t<FaRegCaretSquareLeft />\n\t\t\t\t</IconContext.Provider>\n\t\t\t\t<div id=\"return\">Return to Kiu's resume page</div>\n\t\t\t</a>\n\t\t</aside>\n\t)\n}\n","import firebase from 'firebase/app'\r\n\r\n// Wrapper for Firebase api\r\nexport const signOut = async () => {\r\n\ttry {\r\n\t\tawait firebase.auth().signOut()\r\n\t} catch (error) {\r\n\t\tthrow new Error('Error with sign out')\r\n\t}\r\n}\r\n","import React from 'react'\r\nimport {Link} from '@reach/router'\r\nimport {RiCheckDoubleLine} from 'react-icons/ri'\r\n\r\nimport {signOut} from '../services/firebaseAuth/signOut'\r\n\r\nfunction Navigation({userObj}) {\r\n\tfunction logoutUser() {\r\n\t\tsignOut()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<nav className=\"site-nav family-sans navbar navbar-expand bg-primary navbar-dark\">\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<Link to=\"/\" className=\"navbar-brand\">\r\n\t\t\t\t\t<RiCheckDoubleLine className=\"mr-1\" />\r\n\t\t\t\t\tTask Tracker\r\n\t\t\t\t</Link>\r\n\r\n\t\t\t\t<div className=\"navbar-nav ml-auto\">\r\n\t\t\t\t\t{/* if userObj is null then display the JSX */}\r\n\t\t\t\t\t{!userObj && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Link className=\"nav-item nav-link\" to=\"register\">\r\n\t\t\t\t\t\t\t\tregister\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t{/* ** make login into a dropdown menu https://getbootstrap.com/docs/4.5/components/dropdowns/#forms*/}\r\n\t\t\t\t\t\t\t<Link className=\"nav-item nav-link\" to=\"login\">\r\n\t\t\t\t\t\t\t\tlog in\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{/* if userObj is NOT null then display the JSX */}\r\n\t\t\t\t\t{userObj && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Link className=\"nav-item nav-link\" to={'editUser/' + userObj.id}>\r\n\t\t\t\t\t\t\t\t{userObj.name + ','}\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\tclassName=\"nav-item nav-link\"\r\n\t\t\t\t\t\t\t\tto=\"/login\"\r\n\t\t\t\t\t\t\t\tonClick={logoutUser}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tlog out\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react'\r\nimport {navigate, Link} from '@reach/router'\r\n\r\n// -- page user lands only when not logged in.\r\nfunction Home({isAuth}) {\r\n\t// -- if there is a user logged in, then go to dashboard\r\n\tif (isAuth) {\r\n\t\tnavigate('/dashboard')\r\n\t}\r\n\r\n\t// -- if there are NO user logged in, the provide these options\r\n\treturn (\r\n\t\t<div className=\"container text-center\">\r\n\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t<div className=\"col-10 col-md-10 col-lg-8 col-xl-7\">\r\n\t\t\t\t\t<div className=\"display-4 text-primary mt-3 mb-2\">Task Dashboard</div>\r\n\t\t\t\t\t<p className=\"lead text-white\">Please login to see your dashboard</p>\r\n\r\n\t\t\t\t\t<Link to=\"/register\" className=\"btn btn-secondary mr-2\">\r\n\t\t\t\t\t\tRegister\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to=\"/login\" className=\"btn btn-secondary mr-2\">\r\n\t\t\t\t\t\tLog In\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\n// ** make this into a floating modal/toast\r\n\r\nfunction ErrorForm(prop) {\r\n\treturn (\r\n\t\t<div className=\"col-12 alert alert-danger px-3\">{prop.errorMessage}</div>\r\n\t)\r\n}\r\n\r\nexport default ErrorForm\r\n","import firebase from 'firebase/app'\r\n\r\n// Wrapper for Firebase api\r\nexport const signIn = async (email, password) => {\r\n\ttry {\r\n\t\tlet result = await firebase\r\n\t\t\t.auth()\r\n\t\t\t.signInWithEmailAndPassword(email, password)\r\n\t\treturn result\r\n\t} catch (error) {\r\n\t\tthrow new Error('Error signing in')\r\n\t}\r\n}\r\n","import {navigate} from '@reach/router'\r\nimport React, {useState} from 'react'\r\n\r\nimport ErrorForm from '../components/ErrorForm'\r\n\r\nimport {signIn} from '../services/firebaseAuth/signIn'\r\n\r\nfunction Login() {\r\n\tconst [loginUser, changeLoginUser] = useState({\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\terrorMessage: null,\r\n\t})\r\n\r\n\tfunction handleChange(e) {\r\n\t\tchangeLoginUser({...loginUser, [e.target.name]: e.target.value})\r\n\t}\r\n\r\n\tfunction handleSubmit(e) {\r\n\t\te.preventDefault()\r\n\r\n\t\tsignIn(loginUser.email, loginUser.password)\r\n\t\t\t.then((user) => {\r\n\t\t\t\tif (user) {\r\n\t\t\t\t\t//if the user is not null then\r\n\t\t\t\t\tnavigate('/dashboard')\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tif (error.message !== null) {\r\n\t\t\t\t\tchangeLoginUser({...loginUser, errorMessage: error.message})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchangeLoginUser({...loginUser, errorMessage: null})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className=\"mt-3\" onSubmit={handleSubmit}>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t<div className=\"col-lg-6\">\r\n\t\t\t\t\t\t<div className=\"card bg-light\">\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<h3 className=\"font-weight-light mb-3\">Log in</h3>\r\n\r\n\t\t\t\t\t\t\t\t{loginUser.errorMessage && (\r\n\t\t\t\t\t\t\t\t\t<ErrorForm errorMessage={loginUser.errorMessage} />\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t<section className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<label className=\"form-control-label sr-only\" htmlFor=\"Email\">\r\n\t\t\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"true\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control border border-primary\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={loginUser.email}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t<section className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"true\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control border border-primary\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={loginUser.password}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t<div className=\"form-group text-right mb-0\">\r\n\t\t\t\t\t\t\t\t\t<button className=\"btn btn-secondary\" type=\"submit\">\r\n\t\t\t\t\t\t\t\t\t\tLog in\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default Login\r\n","import firebase from 'firebase/app'\r\n\r\n// -- create new userCredentials in Firebase.Auth() and returns the unique id\r\nexport default async function createFBUserWithEmailandPass(email, password) {\r\n\t// -- note that when a user is successfully created, they will automatically be signed in\r\n\ttry {\r\n\t\tconst newUserCredential = await firebase\r\n\t\t\t.auth()\r\n\t\t\t.createUserWithEmailAndPassword(email, password)\r\n\t\treturn newUserCredential.user.uid\r\n\t} catch (error) {\r\n\t\tthrow new Error(error)\r\n\t}\r\n}\r\n","import firebase from 'firebase/app'\r\n\r\n// -- creates a new user doc at the 'users' collection. NOTE if 'users' is the right collection name in the projects when reusing this code.\r\nexport default async function createUserDoc(id, name, email, jobLevel) {\r\n\tconst db = firebase.firestore()\r\n\r\n\tdb.collection('users')\r\n\t\t.doc(id)\r\n\t\t.set({name, email, jobLevel})\r\n\t\t.catch((error) => {\r\n\t\t\tthrow new Error(error.message)\r\n\t\t})\r\n}\r\n","import createFBUserWithEmailandPass from './createFBUserWithEmailandPass'\r\nimport createUserDoc from './createUserDoc'\r\n\r\n// -- takes in one parametre (an object). This object is deconstructed into the following variables\r\nexport default async function registerUser({name, email, jobLevel, password}) {\r\n\ttry {\r\n\t\t// -- create new userCredentials in Firebase.Auth() and return the id\r\n\t\tconst id = await createFBUserWithEmailandPass(email, password)\r\n\t\tawait createUserDoc(id, name, email, jobLevel)\r\n\r\n\t\talert('Registration completed sucessfully')\r\n\t\t// *** forward to modal/toast a success message\r\n\t} catch (error) {\r\n\t\tconsole.log(error.message)\r\n\t\t// *** forward to modal/toast error message\r\n\t}\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {navigate} from '@reach/router'\r\n\r\nimport registerUser from '../services/user/registerUser'\r\nimport ErrorForm from '../components/ErrorForm'\r\n\r\nfunction Register() {\r\n\tconst [regData, setRegData] = useState({\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tjobLevel: '',\r\n\t\tpassOne: '',\r\n\t\tpassTwo: '',\r\n\t})\r\n\r\n\tconst [errorMessage, setErrorMessage] = useState(null)\r\n\r\n\t//checking passwors match\r\n\tuseEffect(() => {\r\n\t\tif (regData.passOne !== regData.passTwo) {\r\n\t\t\tsetErrorMessage('Passwords do not match.')\r\n\t\t} else {\r\n\t\t\tsetErrorMessage(null)\r\n\t\t}\r\n\t}, [regData.passOne, regData.passTwo])\r\n\r\n\tfunction handleChange(e) {\r\n\t\tsetRegData({\r\n\t\t\t...regData,\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t})\r\n\t}\r\n\r\n\tasync function handleSubmit(e) {\r\n\t\te.preventDefault()\r\n\r\n\t\t// -- prevent the form submission the 2 passwords doesn't match\r\n\t\tif (regData.passOne !== regData.passTwo) {\r\n\t\t\tsetErrorMessage(\r\n\t\t\t\t'Passwords do not match. Please fix before re-submitting.'\r\n\t\t\t)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tlet registrationInfo = {\r\n\t\t\tname: regData.name,\r\n\t\t\temail: regData.email,\r\n\t\t\tjobLevel: regData.jobLevel,\r\n\t\t\tpassword: regData.passOne,\r\n\t\t}\r\n\r\n\t\t// -- validation of required field and email syntax is done via htlm code\r\n\t\t// -- validation that there is no duplicate user email is done via firebase.auth()\r\n\t\t// -- validation of minimum required passwordcomplexity is done by firebase.auth()\r\n\t\tawait registerUser(registrationInfo)\r\n\r\n\t\t// -- once registered, the user will be logged in and directed towards the dashboard\r\n\t\tnavigate('/dashboard')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className=\"mt-3\" onSubmit={handleSubmit}>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t<div className=\"col-lg-8\">\r\n\t\t\t\t\t\t<div className=\"card bg-light\">\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<h3 className=\"font-weight-light mb-3\">Register</h3>\r\n\t\t\t\t\t\t\t\t<div className=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t{/* *** Feature: make Error Message into modal/toast */}\r\n\t\t\t\t\t\t\t\t\t{errorMessage ? (\r\n\t\t\t\t\t\t\t\t\t\t<ErrorForm errorMessage={errorMessage} />\r\n\t\t\t\t\t\t\t\t\t) : null}\r\n\r\n\t\t\t\t\t\t\t\t\t<section className=\"col-sm-12 form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control-label sr-only\"\r\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tName\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control border border-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={regData.name}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t<section className=\"col-sm-6 form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control-label sr-only\"\r\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control border border-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email Address\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={regData.email}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t\t<section className=\"col-sm-6 form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control-label sr-only\"\r\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tJob Level\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"custom-select\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"jobLevel\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"jobLevel\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={regData.jobLevel}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* Form is prevented from being submitted when the job level is not selected thanks to the 'required' property above and the value='' below  */}\r\n\t\t\t\t\t\t\t\t\t\t\t<option defaultValue value=\"\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tJob Level...\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"L1\">L1: General Employee</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"L2\">L2: Supervisor</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t<section className=\"col-sm-6 form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control border border-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"passOne\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={regData.passOne}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t\t<section className=\"col-sm-6 form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control border border-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"passTwo\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Repeat Password\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={regData.passTwo}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"form-group text-right mb-0\">\r\n\t\t\t\t\t\t\t\t\t<button className=\"btn btn-secondary\" type=\"submit\">\r\n\t\t\t\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\nimport {RiFileEditLine} from 'react-icons/ri'\r\nimport {MdArrowDropDownCircle} from 'react-icons/md'\r\nimport {navigate} from '@reach/router'\r\n\r\n// -- This compenent displays a list of tasks from a filtered Array passed on to it from Dashboard\r\nexport default function TasksList({filteredTasksArray}) {\r\n\tif (filteredTasksArray.length === 0) {\r\n\t\treturn (\r\n\t\t\t<h4 className=\"text-white-50 mt-4\">\r\n\t\t\t\tThere are currently no task associated with your account.\r\n\t\t\t</h4>\r\n\t\t)\r\n\t}\r\n\r\n\tfunction handleClick(e, taskId) {\r\n\t\te.stopPropagation()\r\n\t\tnavigate('editTask/' + taskId)\r\n\t}\r\n\r\n\tlet myTask = filteredTasksArray.map((task) => {\r\n\t\treturn (\r\n\t\t\t<div className=\"card\" key={task.id}>\r\n\t\t\t\t<div className=\"card-header p-0\" id={task.id}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"btn btn-block text-left\"\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tdata-toggle=\"collapse\"\r\n\t\t\t\t\t\tdata-target={`#collapse${task.id}`}\r\n\t\t\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\t\t\taria-controls={`collapse${task.id}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-lg btn-outline-secondary col-1 p-2\"\r\n\t\t\t\t\t\t\ttitle=\"Click to Edit Task\"\r\n\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\thandleClick(e, task.id)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<RiFileEditLine />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<div className=\"btn text-truncate text-nowrap text-left col-10\">\r\n\t\t\t\t\t\t\t{task.taskName}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"btn col-1\">\r\n\t\t\t\t\t\t\t<MdArrowDropDownCircle />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tid={`collapse${task.id}`}\r\n\t\t\t\t\tclassName=\"collapse\"\r\n\t\t\t\t\taria-labelledby={task.id}\r\n\t\t\t\t\tdata-parent=\"#taskListaccordion\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"card-body text-left \">\r\n\t\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t\t<div className=\"card-title row justify-content-between\">\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\tPriority: {task.priority === 'p1' && ' Low'}\r\n\t\t\t\t\t\t\t\t\t{task.priority === 'p2' && ' High'}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<span>Due Date: {task.dateDue}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p className=\"card-text\">{task.taskDescription}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t})\r\n\r\n\t// -- NOTE: the class 'accordion' was added below so that only one element is shown while the rest is collapsed. To have multiple tasks elements uncollapsed at the same time, remove the accordion class, and take out the id=\"taskListaccordion\" below as well as the data-parent=\"#taskListaccordion\" in the .map() function\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* <h1>BELOW IS THE TASK LIST:</h1> */}\r\n\t\t\t<div className=\"accordion\" id=\"taskListaccordion\">\r\n\t\t\t\t{myTask}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import firebase from 'firebase/app'\r\n\r\n// Wrapper for Firebase Auth api which returns only the id and email properties. Detailed user info is stored in Firestore under the same user id (see getUserInfo.js)\r\nexport const getCurrentAuthUser = () => {\r\n\tconst user = firebase.auth().currentUser\r\n\tif (!user) {\r\n\t\treturn null // -- return null if no user is logged in\r\n\t} else {\r\n\t\treturn {id: user.uid, email: user.email}\r\n\t}\r\n}\r\n","import {useEffect, useState} from 'react'\r\nimport firebase from 'firebase/app'\r\nimport {getCurrentAuthUser} from '../firebaseAuth/getCurrentAuthUser'\r\n/*\r\nA wrapper API that RETURNS a realtime array of task Objects associated with the currently logged on userId by matching either at nameTaskCreator or nameResponsible\r\n\t\t\t\t\t\t\r\nNOTE refer to the comments in useComments for detail innerworkings of the code below\r\n*/\r\nexport const useTaskList = () => {\r\n\tconst tasksCreator = useUserBelongToTask('nameTaskCreatorId')\r\n\tconst tasksResponsible = useUserBelongToTask('nameResponsibleId')\r\n\tlet finalList = [...tasksCreator, ...tasksResponsible]\r\n\treturn removeDuplicateArr(finalList)\r\n}\r\n\r\n// -- Param userTypeFilter is either 'nameTaskCreatorId' or 'nameResponsibleId'\r\nconst useUserBelongToTask = (userTypeFilter) => {\r\n\tlet userAuthObj = getCurrentAuthUser()\r\n\tconst [tasks, setTasks] = useState([])\r\n\t// -- loading Docs where current userId match the creator field\r\n\tuseEffect(() => {\r\n\t\tlet tasksArray = []\r\n\t\tconst tasksRef = firebase.firestore().collection('tasks')\r\n\t\tconst unsubscribe = tasksRef\r\n\t\t\t.where(userTypeFilter, '==', userAuthObj.id)\r\n\t\t\t.onSnapshot((snapshot) => {\r\n\t\t\t\ttasksArray = snapshot.docs.map((doc) => ({\r\n\t\t\t\t\tid: doc.id,\r\n\t\t\t\t\t...doc.data({serverTimestamps: 'estimate'}),\r\n\t\t\t\t}))\r\n\t\t\t\t// -- convert the Firestore timestamp value to a simplified date STRING of YYYY-MM-DD\r\n\t\t\t\ttasksArray = tasksArray.map((obj) => {\r\n\t\t\t\t\t// -- creates a new Date() from the milliseconds Firestore Timestamp\r\n\t\t\t\t\tlet simpleDate = obj.dateCreated.toDate()\r\n\t\t\t\t\tsimpleDate = simpleDate.toISOString().slice(0, 10)\r\n\t\t\t\t\tobj.dateCreated = simpleDate\r\n\t\t\t\t\t// -- curate what will be returned so we can control future changes better\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: obj.id,\r\n\t\t\t\t\t\tdateCreated: obj.dateCreated,\r\n\t\t\t\t\t\tdateDue: obj.dateDue,\r\n\t\t\t\t\t\tpriority: obj.priority,\r\n\t\t\t\t\t\tstatus: obj.status,\r\n\t\t\t\t\t\tnameTaskCreator: obj.nameTaskCreator,\r\n\t\t\t\t\t\tnameTaskCreatorId: obj.nameTaskCreatorId,\r\n\t\t\t\t\t\tnameResponsible: obj.nameResponsible,\r\n\t\t\t\t\t\tnameResponsibleId: obj.nameResponsibleId,\r\n\t\t\t\t\t\ttaskName: obj.taskName,\r\n\t\t\t\t\t\ttaskDescription: obj.taskDescription,\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tsetTasks(tasksArray)\r\n\t\t\t})\r\n\t\treturn () => unsubscribe()\r\n\t\t// eslint-disable-next-line\r\n\t}, [])\r\n\treturn tasks\r\n}\r\n\r\nfunction removeDuplicateArr(arr) {\r\n\tconst getHash = (item) => item.id\r\n\t// to ensure uniqueness of id\r\n\tconst seenHash = new Set()\r\n\r\n\treturn arr.filter((item) => {\r\n\t\tif (seenHash.has(getHash(item))) {\r\n\t\t\treturn false\r\n\t\t} else {\r\n\t\t\tseenHash.add(getHash(item))\r\n\t\t\treturn true\r\n\t\t}\r\n\t})\r\n}\r\n","/*\r\nReturns true if a string contains anything other than 0-9, a-z (case insensitive), and whitespace.\r\nThis will also accept the following special char -> !?.$%&+-\r\n*/\r\nexport const containsBadChar = (str) => {\r\n\tvar regex = /[^a-z0-9\\s\\u0021\\u003F\\u002E\\u0024\\u0025\\u0026\\u002B\\u002D]/gi\r\n\treturn regex.test(str)\r\n}\r\n","/* \r\nTakes a string and return an array with the space and uppercase addressed */\r\nexport const extractSearchKeywords = (str) => {\r\n\tlet cleanStr = str.trim().toLowerCase()\r\n\t// break multi keywords into array at each space\r\n\tlet searchTermArray = cleanStr.split(' ')\r\n\t// -- remove empty string elements from the array (happens when the user puts multiple spaces between search terms)\r\n\tsearchTermArray = searchTermArray.filter((item) => {\r\n\t\tif (item.length > 0) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\treturn false\r\n\t})\r\n\treturn searchTermArray\r\n}\r\n","import {containsBadChar} from '../general/containsBadChar'\r\nimport {extractSearchKeywords} from '../general/extractSearchKeywords'\r\n\r\nexport const filterTask = (taskList, searchCriteria, orderBy) => {\r\n\tlet orderedList = []\r\n\r\n\tswitch (orderBy) {\r\n\t\tcase 'recent':\r\n\t\t\torderedList = orderByRecent(taskList)\r\n\t\t\tbreak\r\n\t\tcase 'dueDate':\r\n\t\t\torderedList = orderByDate(taskList)\r\n\t\t\tbreak\r\n\t\tcase 'priority':\r\n\t\t\torderedList = orderByPriority(taskList)\r\n\t\t\tbreak\r\n\t\tdefault:\r\n\t\t\tbreak\r\n\t}\r\n\treturn searchByKeyword(orderedList, searchCriteria)\r\n}\r\n\r\n// -- order an Array of objects by the most recently added first (dateCreated)\r\nfunction orderByRecent(taskList) {\r\n\tlet sortArray = taskList.sort((a, b) => {\r\n\t\t// -- sort in ascending order (earlier to later dates)\r\n\t\treturn Date.parse(b.dateCreated) - Date.parse(a.dateCreated)\r\n\t\t/*\r\n\t\tNOTE: I am using Date.parse to be quick and dirty. Risk: There are still many differences in how different hosts parse date strings.\r\n\t\thttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse\r\n\t\t\r\n\t\tThe Firestore timestamp dateCreated property in the var taskList was converted to a simple date STRING. As such, ordering tasks created on the same day will not exact.\r\n\t\t*/\r\n\t})\r\n\treturn sortArray\r\n}\r\n// -- order an Array of objects by the dateDue key\r\nfunction orderByDate(taskList) {\r\n\tlet sortArray = taskList.sort((a, b) => {\r\n\t\t// -- sort in ascending order (earlier to later dates)\r\n\t\treturn Date.parse(a.dateDue) - Date.parse(b.dateDue)\r\n\t\t// -- sort in descending order (later to earlier dates)\r\n\t\t// return Date.parse(b.dateDue) - Date.parse(a.dateDue)\r\n\t})\r\n\treturn sortArray\r\n}\r\n// -- order an Array of objects by the priority key\r\nfunction orderByPriority(taskList) {\r\n\tlet p1Array = taskList.filter((elt) => {\r\n\t\treturn elt.priority === 'p1'\r\n\t})\r\n\tlet p2Array = taskList.filter((elt) => {\r\n\t\treturn elt.priority === 'p2'\r\n\t})\r\n\t// -- then order by due date closest 1st\r\n\treturn [...orderByDate(p2Array), ...orderByDate(p1Array)]\r\n}\r\n// -- order an Array of objects keywords\r\nfunction searchByKeyword(taskList, searchCriteria = '') {\r\n\tlet searchTermArray = []\r\n\tlet results = []\r\n\t// -- just return the whole list if there are no search criteria\r\n\tif (searchCriteria.length === 0) return taskList\r\n\t// -- make sure that the search string is sanatized\r\n\tif (containsBadChar(searchCriteria)) {\r\n\t\t// *** implement a toast/modal for this error notification\r\n\t\tconsole.error('This field only accepts letters, digits, and spaces')\r\n\t} else {\r\n\t\tsearchTermArray = extractSearchKeywords(searchCriteria)\r\n\r\n\t\tresults = taskList.filter((task) => {\r\n\t\t\t/*\r\n\t\t\tfor each keyword in the searchTermArray search in task.taskName and task.taskDescription to see if there is a match\r\n\t\t\tstop seach and return false if any keyword is not found in both taskName and taskDescription\r\n\t\t\t*/\r\n\t\t\tfor (const keyword of searchTermArray) {\r\n\t\t\t\tif (\r\n\t\t\t\t\t!task.taskName.toLowerCase().includes(keyword) &&\r\n\t\t\t\t\t!task.taskDescription.toLowerCase().includes(keyword)\r\n\t\t\t\t)\r\n\t\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t})\r\n\t}\r\n\treturn results\r\n}\r\n","import React, {useState} from 'react'\r\nimport TasksList from '../components/TasksList'\r\nimport {navigate} from '@reach/router'\r\nimport {useTaskList} from '../services/task/useTaskList'\r\nimport {filterTask} from '../services/task/filterTask'\r\n\r\nexport default function DashboardPage() {\r\n\t// *** implement pagination, so only top 10 records gets shown until user scroll further down or request more https://www.youtube.com/watch?v=poqTHxtDXwU&list=PLl-K7zZEsYLluG5MCVEzXAQ7ACZBCuZgZ&index=7\r\n\r\n\tconst [orderBy, setOrderby] = useState('recent')\r\n\tconst [searchCriteria, setSearchCriteria] = useState('')\r\n\tlet taskList = useTaskList()\r\n\tlet filteredTasksArray = []\r\n\tif (taskList.length !== 0 && taskList !== undefined && taskList !== null) {\r\n\t\tfilteredTasksArray = filterTask(taskList, searchCriteria, orderBy)\r\n\t}\r\n\tfunction handleClick(e) {\r\n\t\te.preventDefault()\r\n\t\tnavigate('editTask')\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"container text-center\">\r\n\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t<div className=\"col-10 col-md-10 col-lg-8 col-xl-7\">\r\n\t\t\t\t\t\t<h1 className=\"display-4 text-primary mt-3 mb-2\">Task Dashboard</h1>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"btn btn-secondary mt-4 mb-2\"\r\n\t\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCreate New Task\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<div className=\"input-group mb-1\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control border border-primary\"\r\n\t\t\t\t\t\t\t\taria-label=\"Text input with dropdown button\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter search keywords...\"\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\tvalue={searchCriteria}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setSearchCriteria(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"Query Type Label\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control text-center col-lg-3\"\r\n\t\t\t\t\t\t\t\taria-label=\"\"\r\n\t\t\t\t\t\t\t\tvalue=\"Order Search by:\"\r\n\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\tclassName=\"custom-select col-lg-3\"\r\n\t\t\t\t\t\t\t\tname=\"orderBy\"\r\n\t\t\t\t\t\t\t\tvalue={orderBy}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setOrderby(e.target.value)}\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value=\"recent\" defaultValue>\r\n\t\t\t\t\t\t\t\t\tRecently Added\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t<option value=\"dueDate\">Due Date</option>\r\n\t\t\t\t\t\t\t\t<option value=\"priority\">Priority</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<TasksList filteredTasksArray={filteredTasksArray} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import firebase from 'firebase/app'\r\nconst db = firebase.firestore()\r\n\r\n// -- Returns all of a user's details in Firestore doc given an id\r\nexport const getUserInfo = async (userId) => {\r\n\tif (userId === null) return null // -- handle the improbably situation where userId is null\r\n\r\n\tconst docReference = db.collection('users').doc(userId)\r\n\tconst docSnapShot = await docReference.get()\r\n\r\n\tif (!docSnapShot.exists) {\r\n\t\treturn null // we are saying to explicitely return null since userInfo is 'undefined' if no doc found\r\n\t}\r\n\r\n\tconst docData = docSnapShot.data()\r\n\r\n\treturn {...docData, id: userId} // -- adds id key because docData does not contain the id directly\r\n}\r\n","import {getCurrentAuthUser} from '../firebaseAuth/getCurrentAuthUser'\r\nimport {getUserInfo} from './getUserInfo'\r\n\r\n// -- returns the currently logged in user's info from the Firestore 'users' collection\r\n// -- returns Null if not logged in\r\n\r\nexport const getCurrentUserInfo = async () => {\r\n\tconst userAuthObj = getCurrentAuthUser()\r\n\r\n\tif (!userAuthObj) {\r\n\t\treturn null\r\n\t} else {\r\n\t\tconst userObj = await getUserInfo(userAuthObj.id)\r\n\t\treturn userObj\r\n\t}\r\n}\r\n","import firebase from 'firebase/app'\r\n\r\n/*\r\nWrapper for Firebase API to get a task document\r\nReturns an object with all the fields of a task for a given taskId || undefined if no record match taskId (not likely scenario, maybe when connectino is lost?)\r\n\r\nEach task in the talk arrray is {dateCreated, dateDue, nameResponsible, nameResponsibleId, nameTaskCreator, nameTaskCreatorId, priority, status, taskDescription, taskName}\r\n*/\r\nexport default async function getTaskObj(taskId) {\r\n\tconst taskRef = firebase.firestore().collection('tasks').doc(taskId)\r\n\tconst docRef = await taskRef.get()\r\n\tconst obj = docRef.data()\r\n\r\n\t// -- convert the Firestore timestamp value to a simplified date STRING of YYYY-MM-DD\r\n\tlet simpleDate = obj.dateCreated.toDate() // -- creates a new Date() from the milliseconds\r\n\tsimpleDate = simpleDate.toISOString().slice(0, 10)\r\n\r\n\t// -- curate what will be returned so we can control future changes better\r\n\treturn {\r\n\t\tid: taskId,\r\n\t\tdateCreated: simpleDate,\r\n\t\tdateDue: obj.dateDue,\r\n\t\tpriority: obj.priority,\r\n\t\tstatus: obj.status,\r\n\t\tnameResponsible: obj.nameResponsible,\r\n\t\tnameResponsibleId: obj.nameResponsibleId,\r\n\t\tnameTaskCreator: obj.nameTaskCreator,\r\n\t\tnameTaskCreatorId: obj.nameTaskCreatorId,\r\n\t\ttaskDescription: obj.taskDescription,\r\n\t\ttaskName: obj.taskName,\r\n\t}\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport firebase from 'firebase/app'\r\n\r\n/*\r\nuseEmployeeList is a custom React Hook.\r\nparams: jobLevel is string L1 or L2\r\nreturns a realtime array of employees at the JOBLEVEL 1\r\n*/\r\nexport default function useEmployeeList(jobLevel) {\r\n\tconst [employees, setEmployees] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst usersRef = firebase.firestore().collection('users')\r\n\r\n\t\tconst unsubscribe = usersRef\r\n\t\t\t.where('jobLevel', '==', jobLevel)\r\n\t\t\t.orderBy('name', 'asc')\r\n\t\t\t.onSnapshot(\r\n\t\t\t\t(snapshot) => {\r\n\t\t\t\t\tconst usersArray = snapshot.docs.map((doc) => ({\r\n\t\t\t\t\t\tid: doc.id,\r\n\t\t\t\t\t\t...doc.data(),\r\n\t\t\t\t\t}))\r\n\t\t\t\t\tsetEmployees(usersArray)\r\n\t\t\t\t},\r\n\t\t\t\t(error) => {\r\n\t\t\t\t\tthrow new Error('Error: ' + error.message)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\treturn () => unsubscribe()\r\n\t\t// eslint-disable-next-line\r\n\t}, [])\r\n\r\n\treturn employees // -- an array of users objects with all the key value pairs, including the doc id. The doc.id will be used as the element's unique key when rendering the React component\r\n}\r\n","import firebase from 'firebase/app'\r\n\r\n// -- wrapper to firebase for adding an object and returning the object with the newly created id\r\nexport default async function addTask(taskObj) {\r\n\tconst tasksRef = firebase.firestore().collection('tasks')\r\n\r\n\ttry {\r\n\t\tconst docRef = await tasksRef.add(taskObj)\r\n\t\tconst docSnap = await docRef.get()\r\n\t\treturn {id: docRef.id, ...docSnap.data()} // -- returns the id with the data\r\n\t} catch (error) {\r\n\t\talert(error.message)\r\n\t\tthrow new Error(error)\r\n\t}\r\n}\r\n","import firebase from 'firebase/app'\r\n\r\n// -- wrapper to firebase for updating a task\r\nexport default async function updateTask(taskId, taskObj) {\r\n\t// -- NOTE: ensures that the timestamp is not overwritten\r\n\tdelete taskObj.dateCreated\r\n\r\n\tconst tasksRef = firebase.firestore().collection('tasks').doc(taskId)\r\n\ttry {\r\n\t\tawait tasksRef.update(taskObj)\r\n\t\treturn true\r\n\t} catch (error) {\r\n\t\talert(error.message)\r\n\t\tthrow new Error('Could not update the Task. Please contact Helpdesk.')\r\n\t}\r\n}\r\n","import firebase from 'firebase/app'\r\n\r\n// -- function adds a new comment document under the task collection and comments subcollection\r\n// -- returns the id of the new comment doc. This return value is currently not used\r\nexport default async function addComment(taskId, comment, userObj) {\r\n\tconst collectionRef = firebase\r\n\t\t.firestore()\r\n\t\t.collection('tasks')\r\n\t\t.doc(taskId)\r\n\t\t.collection('comments')\r\n\r\n\ttry {\r\n\t\t// -- comment doc's fields will not be atomized in order to save on extra query search. Both the username and email will be save in the comment doc. The username and email can be retrieved using the userId, but that requires an extra querying step, which neans more $.\r\n\t\tlet newDocRef = await collectionRef.add({\r\n\t\t\tcomment,\r\n\t\t\tname: userObj.name,\r\n\t\t\tuserId: userObj.id,\r\n\t\t\temail: userObj.email,\r\n\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n\t\t})\r\n\t\treturn newDocRef.id // -- returns the id of the newly added comment\r\n\t} catch (error) {\r\n\t\talert('Errow with saving the comment: ' + error.message)\r\n\t}\r\n}\r\n","// *** dynamic list of jobLevel 1 for the dropdown menu is further filtered by department (but this is for future improvements / production version)\r\n// *** provide more detail of what was modified for Auto Messages when updating tasks\r\nimport React, {useEffect, useState} from 'react'\r\nimport firebase from 'firebase/app'\r\nimport {navigate} from '@reach/router'\r\n\r\nimport {getCurrentUserInfo} from '../services/user/getCurrentUserInfo'\r\nimport getTaskObj from '../services/task/getTaskObj'\r\nimport useEmployeeList from '../services/task/useEmployeeList'\r\nimport addTask from '../services/task/addTask'\r\nimport updateTask from '../services/task/updateTask'\r\nimport addComment from '../services/task/addComment'\r\nimport {containsBadChar} from '../services/general/containsBadChar'\r\n\r\nexport default function TaskForm({taskId = null}) {\r\n\tconst [userObj, setuserObj] = useState({})\r\n\r\n\tconst [taskObj, setTaskObj] = useState({\r\n\t\tpriority: '',\r\n\t\tstatus: '',\r\n\t\tdateDue: '',\r\n\t\tnameResponsible: '',\r\n\t\tnameResponsibleId: '',\r\n\t\ttaskName: '',\r\n\t\ttaskDescription: '',\r\n\t})\r\n\t// -- used to keep track if the data has been changed\r\n\tconst [existingTaskObj, setExistingTaskObj] = useState({\r\n\t\tpriority: '',\r\n\t\tstatus: '',\r\n\t\tdateDue: '',\r\n\t\tnameResponsible: '',\r\n\t\tnameResponsibleId: '',\r\n\t\ttaskName: '',\r\n\t\ttaskDescription: '',\r\n\t})\r\n\t// -- these presets are for fields not to be modified once the task is created\r\n\tconst [taskObjPresets, setTaskObjPresets] = useState({\r\n\t\tdateCreated: '',\r\n\t\tnameTaskCreator: '',\r\n\t\tnameTaskCreatorId: '',\r\n\t})\r\n\t// -- load employee list for dropdown menu\r\n\t// -- currently allowing the task creator to assign themselves as the one responsible\r\n\tlet employeeL1List = useEmployeeList('L1').map((item) => {\r\n\t\treturn (\r\n\t\t\t<option key={item.id} data-key={item.id} value={item.name}>\r\n\t\t\t\t{item.name}\r\n\t\t\t</option>\r\n\t\t)\r\n\t})\r\n\tlet employeeL2List = useEmployeeList('L2').map((item) => {\r\n\t\treturn (\r\n\t\t\t<option key={item.id} data-key={item.id} value={item.name}>\r\n\t\t\t\t{item.name}\r\n\t\t\t</option>\r\n\t\t)\r\n\t})\r\n\t// Load the currently logged user info\r\n\tuseEffect(() => {\r\n\t\tconst userObj = async () => {\r\n\t\t\tconst data = await getCurrentUserInfo()\r\n\t\t\tsetuserObj(data)\r\n\t\t}\r\n\t\tuserObj()\r\n\t\t// -- since getCurrentUserInfo() is async, it will constantly cycle from a promise to fullfilled everytime it is called. As such, I am using the empty [] to only do this action once when the component mounts. Furthermore, getCurrentUserInfo() should not changed while the component is mounted.\r\n\t}, [])\r\n\t// -- NEW task - set by default the status to be 'in progress'\r\n\tuseEffect(() => {\r\n\t\tif (taskId === null) {\r\n\t\t\t// -- automatically set the status to be s1: in progress when creating a new task\r\n\t\t\tsetTaskObj((old) => ({...old, status: 's1'}))\r\n\t\t}\r\n\t}, [taskId])\r\n\t// -- EXISTING task - set taskObj to the task info\r\n\tuseEffect(() => {\r\n\t\tif (taskId !== null) {\r\n\t\t\tasync function getTaskandSet() {\r\n\t\t\t\tconst taskInfo = await getTaskObj(taskId)\r\n\t\t\t\tsetTaskObjPresets({\r\n\t\t\t\t\tdateCreated: taskInfo.dateCreated,\r\n\t\t\t\t\tnameTaskCreator: taskInfo.nameTaskCreator,\r\n\t\t\t\t\tnameTaskCreatorId: taskInfo.nameTaskCreatorId,\r\n\t\t\t\t})\r\n\t\t\t\t// -- stripout these properties before setting the state for the following\r\n\t\t\t\tdelete taskInfo.dateCreated\r\n\t\t\t\tdelete taskInfo.nameTaskCreator\r\n\t\t\t\tdelete taskInfo.nameTaskCreatorId\r\n\t\t\t\tsetTaskObj({...taskInfo})\r\n\t\t\t\tsetExistingTaskObj({...taskInfo})\r\n\t\t\t}\r\n\t\t\tgetTaskandSet()\r\n\t\t}\r\n\t}, [taskId])\r\n\t// -- deactivate fields based on job level\r\n\t// *** Also need to implement security redundancy on the server side with security rules (else user can remove the disabled attribute in the browser and submit unauthorized datafields )\r\n\tuseEffect(() => {\r\n\t\tlet securedElements = document.querySelectorAll('[data-secured]')\r\n\t\tif (taskId !== null && userObj.jobLevel === 'L1') {\r\n\t\t\tfor (const item of securedElements) {\r\n\t\t\t\titem.attributes.setNamedItem(document.createAttribute('disabled'))\r\n\t\t\t}\r\n\t\t}\r\n\t}, [taskId, userObj])\r\n\t// -- set colour of the dropdown menus\r\n\tuseEffect(() => {\r\n\t\tlet priorityMenus = document.querySelectorAll('.priority')\r\n\t\tfor (const item of priorityMenus) {\r\n\t\t\tchangeMenuColor(item)\r\n\t\t}\r\n\t\tlet statusMenus = document.querySelectorAll('.status')\r\n\t\tfor (const item of statusMenus) {\r\n\t\t\tchangeMenuColor(item)\r\n\t\t}\r\n\t}, [taskObj])\r\n\t// -- Activate/Deactivate submit button by checking if the user changed the initial information\r\n\tuseEffect(() => {\r\n\t\tconst buttonRef = document.querySelector('#submitButton')\r\n\t\tif (\r\n\t\t\t// -- taskName, dateCreated, nameTaskCreator will not change once a task is created, so no need to detect changes\r\n\t\t\ttaskObj.status === existingTaskObj.status &&\r\n\t\t\ttaskObj.priority === existingTaskObj.priority &&\r\n\t\t\ttaskObj.dateDue === existingTaskObj.dateDue &&\r\n\t\t\ttaskObj.nameResponsible === existingTaskObj.nameResponsible &&\r\n\t\t\ttaskObj.taskName === existingTaskObj.taskName &&\r\n\t\t\ttaskObj.taskDescription === existingTaskObj.taskDescription\r\n\t\t) {\r\n\t\t\t// -- assigned the 'disabled' attribute to the button element\r\n\t\t\tbuttonRef.attributes.setNamedItem(document.createAttribute('disabled'))\r\n\t\t} else {\r\n\t\t\tif (buttonRef.hasAttribute('disabled')) {\r\n\t\t\t\tbuttonRef.attributes.removeNamedItem('disabled')\r\n\t\t\t}\r\n\t\t}\r\n\t}, [taskObj, existingTaskObj])\r\n\r\n\tfunction handleChange(e) {\r\n\t\tsetTaskObj({...taskObj, [e.target.name]: e.target.value})\r\n\t}\r\n\tfunction handleResponsibleNameChange(e) {\r\n\t\t// -- gets the index of the targeted option in the dropdown\r\n\t\tconst selectedIndex = e.target.options.selectedIndex\r\n\t\t// -- get the key at the selected option data-set\r\n\t\tconst responsibleUserId = e.target.options[selectedIndex].getAttribute(\r\n\t\t\t'data-key'\r\n\t\t)\r\n\t\tsetTaskObj({\r\n\t\t\t...taskObj,\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t\tnameResponsibleId: responsibleUserId,\r\n\t\t})\r\n\t}\r\n\tfunction handlePriorityChange(e) {\r\n\t\thandleChange(e)\r\n\t\tchangeMenuColor(e.target)\r\n\t}\r\n\tfunction handleStatusChange(e) {\r\n\t\thandleChange(e)\r\n\t\tchangeMenuColor(e.target)\r\n\t}\r\n\t// -- change the menu color based on the selection\r\n\tfunction changeMenuColor(htmlElement) {\r\n\t\tswitch (htmlElement.value) {\r\n\t\t\t// -- '' is for all menus (Default case when there is no value selected in the drop down menu)\r\n\t\t\tcase '':\r\n\t\t\t\thtmlElement.setAttribute('style', 'background-color:white; color:black')\r\n\t\t\t\tbreak\r\n\t\t\t// -- for the 'priority' menus\r\n\t\t\tcase 'p1':\r\n\t\t\t\thtmlElement.setAttribute(\r\n\t\t\t\t\t'style',\r\n\t\t\t\t\t'background-color:yellow; color:black'\r\n\t\t\t\t)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'p2':\r\n\t\t\t\thtmlElement.setAttribute(\r\n\t\t\t\t\t'style',\r\n\t\t\t\t\t'background-color:orange; color:white'\r\n\t\t\t\t)\r\n\t\t\t\tbreak\r\n\t\t\t// -- for the 'status' menus\r\n\t\t\tcase 's1':\r\n\t\t\t\thtmlElement.setAttribute('style', 'background-color:green; color:white')\r\n\t\t\t\tbreak\r\n\t\t\tcase 's2':\r\n\t\t\t\thtmlElement.setAttribute('style', 'background-color:gray; color:black')\r\n\t\t\t\tbreak\r\n\t\t\tcase 's3':\r\n\t\t\t\thtmlElement.setAttribute('style', 'background-color:black; color:white')\r\n\t\t\t\tbreak\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\tasync function handleSubmit(e) {\r\n\t\te.preventDefault()\r\n\t\t// -- if creating a new task\r\n\t\tif (taskId === null) {\r\n\t\t\t//data validation before upload to firestore\r\n\t\t\tif (\r\n\t\t\t\tcontainsBadChar(taskObj.taskName) ||\r\n\t\t\t\tcontainsBadChar(taskObj.taskDescription)\r\n\t\t\t) {\r\n\t\t\t\t// *** update this error message into a toast\r\n\t\t\t\tconsole.error(\r\n\t\t\t\t\t'Comments cannot contain special characters other than !?.$%&+-. Please remove the other special characters before saving'\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\t// -- once data validaitno is passed\r\n\t\t\t\tlet newTask = await addTask({\r\n\t\t\t\t\t...taskObj,\r\n\t\t\t\t\tnameTaskCreator: userObj.name, //-- name is entered directly along side the userId, so that we don't have to do another query to look up the name from the user id\r\n\t\t\t\t\tnameTaskCreatorId: userObj.id,\r\n\t\t\t\t\tdateCreated: firebase.firestore.FieldValue.serverTimestamp(),\r\n\t\t\t\t})\r\n\t\t\t\t// -- auto generate comment about task created by so and so\r\n\t\t\t\tautoCommentBot(newTask.id, 'Auto Message: Task is created')\r\n\r\n\t\t\t\talert('New task is saved') // *** make this into a toast/modal\r\n\t\t\t\tnavigate('../dashboard')\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// UPDATING a task\r\n\r\n\t\t\t//data validation before upload to firestore\r\n\t\t\tif (\r\n\t\t\t\tcontainsBadChar(taskObj.taskName) ||\r\n\t\t\t\tcontainsBadChar(taskObj.taskDescription)\r\n\t\t\t) {\r\n\t\t\t\t// *** update this error message into a toast\r\n\t\t\t\tconsole.error(\r\n\t\t\t\t\t'Comments cannot contain special characters other than !?.$%&+-. Please remove the other special characters before saving'\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\tlet result = await updateTask(taskId, taskObj)\r\n\r\n\t\t\t\tif (result) {\r\n\t\t\t\t\t// -- auto generate comment about task created by so and so\r\n\t\t\t\t\tautoCommentBot(taskId, 'Auto Message: Task was modified')\r\n\r\n\t\t\t\t\talert('Task is updated') // *** make this into a toast/modal\r\n\t\t\t\t\t// -- don't navigate away as the user may edit further information\r\n\r\n\t\t\t\t\t// -- Once setExistingTaskObj is triggered, the useEffect to Activate/Deactivate kicks in and disables the button agai\r\n\t\t\t\t\tsetExistingTaskObj(taskObj)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tasync function autoCommentBot(taskId, newComment) {\r\n\t\ttry {\r\n\t\t\tconst userObj = await getCurrentUserInfo() // -- returns Null if no user is logged in\r\n\t\t\t// -- checks if user exits, or else something is wrong with the connection\r\n\t\t\tif (!userObj) {\r\n\t\t\t\t// -- execute this if userObj is Null\r\n\t\t\t\tthrow new Error('User information cannot be verified')\r\n\t\t\t}\r\n\t\t\tawait addComment(taskId, newComment, userObj) // -- currentlyLoggedInUser is an object with the key id, name, email\r\n\t\t} catch (error) {\r\n\t\t\talert(error.message)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* display of heading will depend of status of taskId */}\r\n\t\t\t{taskId === null && (\r\n\t\t\t\t<h2 className=\"text-primary my-3\">Create New Task Form</h2>\r\n\t\t\t)}\r\n\t\t\t{taskId !== null && (\r\n\t\t\t\t<h2 className=\"text-primary my-3\">Update Task Form</h2>\r\n\t\t\t)}\r\n\r\n\t\t\t<form className=\"border p-2 bg-light card\" onSubmit={handleSubmit}>\r\n\t\t\t\t<div className=\"form-row\">\r\n\t\t\t\t\t<div className=\"form-group col-md-3\">\r\n\t\t\t\t\t\t<label className=\"form-control-label\" htmlFor=\"priority\">\r\n\t\t\t\t\t\t\tPriority Level:\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tclassName=\"custom-select priority\"\r\n\t\t\t\t\t\t\tname=\"priority\"\r\n\t\t\t\t\t\t\tvalue={taskObj.priority}\r\n\t\t\t\t\t\t\tonChange={handlePriorityChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option defaultValue className=\"priority\" value=\"\">\r\n\t\t\t\t\t\t\t\tPriority...\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t<option value=\"p1\" className=\"priority\">\r\n\t\t\t\t\t\t\t\tLow\r\n\t\t\t\t\t\t\t</option>\r\n\r\n\t\t\t\t\t\t\t<option value=\"p2\" className=\"priority\">\r\n\t\t\t\t\t\t\t\tHigh\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group col-md-3\">\r\n\t\t\t\t\t\t<label className=\"form-control-label\" htmlFor=\"dateDue\">\r\n\t\t\t\t\t\t\tDeadline:\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\tid=\"dateDue\"\r\n\t\t\t\t\t\t\tplaceholder=\"Select Task Deadline...\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tname=\"dateDue\"\r\n\t\t\t\t\t\t\tdata-secured\r\n\t\t\t\t\t\t\tvalue={taskObj.dateDue}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group col-md-6\">\r\n\t\t\t\t\t\t{/* only L1 users can appear here */}\r\n\t\t\t\t\t\t<label className=\"form-control-label\" htmlFor=\"nameResponsible\">\r\n\t\t\t\t\t\t\tResponsible Employee\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tclassName=\"custom-select\"\r\n\t\t\t\t\t\t\tname=\"nameResponsible\"\r\n\t\t\t\t\t\t\tid=\"nameResponsible\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tdata-secured\r\n\t\t\t\t\t\t\tvalue={taskObj.nameResponsible}\r\n\t\t\t\t\t\t\tonChange={handleResponsibleNameChange}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value=\"\" defaultValue disabled hidden>\r\n\t\t\t\t\t\t\t\tSelect Responsible Employee\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t<optgroup label=\"L1 General Employees:\">\r\n\t\t\t\t\t\t\t\t{employeeL1List}\r\n\t\t\t\t\t\t\t</optgroup>\r\n\t\t\t\t\t\t\t<optgroup label=\"L2 Supervisor Level:\">{employeeL2List}</optgroup>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-row\">\r\n\t\t\t\t\t<div className=\"form-group col-md-3\">\r\n\t\t\t\t\t\t<label className=\"form-control-label \" htmlFor=\"status\">\r\n\t\t\t\t\t\t\tTask Status:\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tclassName=\"custom-select status\"\r\n\t\t\t\t\t\t\tname=\"status\"\r\n\t\t\t\t\t\t\tid=\"status\"\r\n\t\t\t\t\t\t\tvalue={taskObj.status}\r\n\t\t\t\t\t\t\tonChange={handleStatusChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option defaultValue className=\"status\" value=\"\">\r\n\t\t\t\t\t\t\t\tStatus...\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t<option className=\"status\" value=\"s1\">\r\n\t\t\t\t\t\t\t\tIn Progress\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t<option className=\"status\" value=\"s2\">\r\n\t\t\t\t\t\t\t\tClosing\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t<option className=\"status\" value=\"s3\">\r\n\t\t\t\t\t\t\t\tArchived\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group col-md-3\">\r\n\t\t\t\t\t\t{/* only show when the taskId is NOT null (i.e. editing an existing task) */}\r\n\t\t\t\t\t\t{taskId !== null && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<label className=\"form-control-label\" htmlFor=\"dateCreated\">\r\n\t\t\t\t\t\t\t\t\tDate Created:\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\t\tid=\"dateCreated\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Loading...\"\r\n\t\t\t\t\t\t\t\t\tname=\"dateCreated\"\r\n\t\t\t\t\t\t\t\t\tvalue={taskObjPresets.dateCreated}\r\n\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group col-md-6\">\r\n\t\t\t\t\t\t{taskId !== null && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<label className=\"form-control-label\" htmlFor=\"nameTaskCreator\">\r\n\t\t\t\t\t\t\t\t\tTask Creator\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tid=\"nameTaskCreator\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Leader's Name\"\r\n\t\t\t\t\t\t\t\t\tname=\"nameTaskCreator\"\r\n\t\t\t\t\t\t\t\t\tvalue={taskObjPresets.nameTaskCreator}\r\n\t\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<label className=\"form-control-label\" htmlFor=\"taskName\">\r\n\t\t\t\t\tTask Name:\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"form-control border border-primary\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tid=\"taskName\"\r\n\t\t\t\t\tplaceholder=\"Enter Task Name...\"\r\n\t\t\t\t\tname=\"taskName\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tdata-secured\r\n\t\t\t\t\tvalue={taskObj.taskName}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<label className=\"form-control-label\" htmlFor=\"taskDescription\">\r\n\t\t\t\t\tTask Description:\r\n\t\t\t\t</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclassName=\"form-control border border-primary\"\r\n\t\t\t\t\tname=\"taskDescription\"\r\n\t\t\t\t\tid=\"taskDescription\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tplaceholder=\"Enter Task Description...\"\r\n\t\t\t\t\tvalue={taskObj.taskDescription}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tcols=\"30\"\r\n\t\t\t\t\trows=\"5\"\r\n\t\t\t\t></textarea>\r\n\t\t\t\t<div className=\"form-group text-right mb-0\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid=\"submitButton\"\r\n\t\t\t\t\t\tclassName=\"btn btn-secondary mt-2\"\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{taskId === null && 'Create Task'}\r\n\t\t\t\t\t\t{taskId !== null && 'Update Task'}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t)\r\n}\r\n","import firebase from 'firebase/app'\r\n\r\nexport async function loadMoreComments(\r\n\ttaskId,\r\n\tqueryLimit,\r\n\tlastRetrievedDoc = null\r\n) {\r\n\tconst incrementalQuery = firebase\r\n\t\t.firestore()\r\n\t\t.collection('tasks')\r\n\t\t.doc(taskId)\r\n\t\t.collection('comments')\r\n\t\t.orderBy('timestamp', 'desc')\r\n\t\t.limit(queryLimit)\r\n\r\n\tlet snapshot\r\n\r\n\tif (lastRetrievedDoc === null) {\r\n\t\tsnapshot = await incrementalQuery.get()\r\n\t} else {\r\n\t\tsnapshot = await incrementalQuery.startAfter(lastRetrievedDoc).get()\r\n\t}\r\n\r\n\t// -- Get the last document in the limited query search. lastComment will be undefined when snapshot.docs.length === 0\r\n\tconst lastComment = snapshot.docs[snapshot.docs.length - 1]\r\n\tconst commentList = snapshot.docs.map((doc) => ({id: doc.id, ...doc.data()}))\r\n\treturn {lastComment, commentList}\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport firebase from 'firebase/app'\r\n\r\nimport {loadMoreComments} from '../services/task/loadMoreComments'\r\n\r\nexport default function CommentsList({taskId}) {\r\n\tconst [initialComments, setInitialComments] = useState([])\r\n\tconst [comments, setComments] = useState([])\r\n\tconst [lastRetrievedDoc, setLastRetrievedDoc] = useState(null)\r\n\tconst [isLoading, setIsLoading] = useState(true)\r\n\tconst queryLimit = 5\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsLoading(true)\r\n\t\tconst commentsRef = firebase\r\n\t\t\t.firestore()\r\n\t\t\t.collection('tasks')\r\n\t\t\t.doc(taskId)\r\n\t\t\t.collection('comments')\r\n\t\t\t.orderBy('timestamp', 'desc')\r\n\t\t\t.limit(queryLimit)\r\n\r\n\t\tconst unsubscribe = commentsRef.onSnapshot(\r\n\t\t\t(snapshot) => {\r\n\t\t\t\tconst commentsArray = snapshot.docs.map((doc) => ({\r\n\t\t\t\t\tid: doc.id,\r\n\t\t\t\t\t...doc.data({serverTimestamps: 'estimate'}),\r\n\t\t\t\t}))\r\n\t\t\t\tsetInitialComments(commentsArray)\r\n\t\t\t\tsetComments(commentsArray)\r\n\t\t\t\tsetLastRetrievedDoc(snapshot.docs[snapshot.docs.length - 1])\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tthrow new Error('Error: ' + error.message)\r\n\t\t\t}\r\n\t\t)\r\n\t\tsetIsLoading(false)\r\n\r\n\t\treturn () => unsubscribe()\r\n\t}, [taskId])\r\n\r\n\tuseEffect(() => {\r\n\t\tlet element = document.querySelector('#commentBtn')\r\n\t\t// -- on mount\r\n\t\tif (initialComments.length >= queryLimit)\r\n\t\t\telement.removeAttribute('disabled')\r\n\t\tif (initialComments.length < queryLimit - 1)\r\n\t\t\telement.attributes.setNamedItem(document.createAttribute('disabled'))\r\n\r\n\t\t// -- when there is no more to load\r\n\t\tif (lastRetrievedDoc === undefined)\r\n\t\t\telement.attributes.setNamedItem(document.createAttribute('disabled'))\r\n\t})\r\n\r\n\tasync function handleClick(e) {\r\n\t\t// -- load additional comments on click\r\n\t\te.preventDefault()\r\n\t\tsetIsLoading(true)\r\n\t\ttry {\r\n\t\t\tconst {lastComment, commentList} = await loadMoreComments(\r\n\t\t\t\ttaskId,\r\n\t\t\t\tqueryLimit,\r\n\t\t\t\tlastRetrievedDoc\r\n\t\t\t)\r\n\t\t\tsetLastRetrievedDoc(lastComment)\r\n\t\t\tsetIsLoading(false)\r\n\t\t\tsetComments((existingComments) => [...existingComments, ...commentList])\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Can't load additional comments\")\r\n\t\t}\r\n\t}\r\n\r\n\tlet commentJSX = comments.map((comment) => (\r\n\t\t// -- each comment object has to have at least the following keys: id, timestamp, description, userId, name, email\r\n\t\t<li className=\"list-group-item list-group-item-action\" key={comment.id}>\r\n\t\t\t<div className=\"d-flex w-100 justify-content-between\">\r\n\t\t\t\t<a\r\n\t\t\t\t\tclassName=\"mb-1\"\r\n\t\t\t\t\thref={`mailto:${comment.email}?subject=taskId:${taskId}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t<small>{comment.name}</small>\r\n\t\t\t\t</a>\r\n\t\t\t\t<small className=\"text-muted\">\r\n\t\t\t\t\t{comment.timestamp.toDate().toDateString()}\r\n\t\t\t\t</small>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"text-muted\">{comment.comment}</div>\r\n\t\t</li>\r\n\t))\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{<ul className=\"list-group\">{commentJSX}</ul>}\r\n\t\t\t<div>{isLoading && 'Loading...'}</div>\r\n\t\t\t<button\r\n\t\t\t\tid=\"commentBtn\"\r\n\t\t\t\tclassName=\"btn btn-secondary mt-2\"\r\n\t\t\t\tonClick={handleClick}\r\n\t\t\t>\r\n\t\t\t\tLoad additional comments\r\n\t\t\t</button>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nimport CommentsList from '../components/CommentsList'\r\nimport {getCurrentUserInfo} from '../services/user/getCurrentUserInfo'\r\nimport addComment from '../services/task/addComment'\r\nimport {containsBadChar} from '../services/general/containsBadChar'\r\n\r\nexport default function CommentsSection({taskId}) {\r\n\tconst [newComment, setNewComment] = useState('')\r\n\r\n\tfunction handleChange(e) {\r\n\t\te.preventDefault()\r\n\t\tsetNewComment(e.target.value)\r\n\t}\r\n\r\n\tasync function handleSubmit(e) {\r\n\t\te.preventDefault() // -- prevents reloading when the 'enter' key is pressed when typing in the input field\r\n\t\ttry {\r\n\t\t\tconst userObj = await getCurrentUserInfo() // -- returns Null if no user is logged in\r\n\r\n\t\t\tif (!userObj) {\r\n\t\t\t\t// -- execute this if userObj is Null\r\n\t\t\t\tthrow new Error('User information cannot be verified')\r\n\t\t\t}\r\n\t\t\t// sanatize the comment field before sending off\r\n\t\t\tif (containsBadChar(newComment)) {\r\n\t\t\t\t// *** update this error message into a toast\r\n\t\t\t\tconsole.error(\r\n\t\t\t\t\t'Comments cannot contain special characters other than !?.$%&+-. Please remove the other special characters before saving'\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\t// -- currentlyLoggedInUser is an object with the key id, name, email\r\n\t\t\t\tawait addComment(taskId, newComment, userObj)\r\n\t\t\t\tsetNewComment('') // -- resets the form after submitting\r\n\t\t\t\t// -- because onSnapshop was used to generate the list of comments, the new comment should automatically be displayed\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\talert(error.message)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"border p-2 card\">\r\n\t\t\t<form className=\"input-group mb-3\" onSubmit={handleSubmit}>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname=\"comment\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"form-control border border-primary\"\r\n\t\t\t\t\tplaceholder=\"Add a new comment...\"\r\n\t\t\t\t\taria-label=\"New comment input field\"\r\n\t\t\t\t\taria-describedby=\"button-comment\"\r\n\t\t\t\t\tvalue={newComment}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"input-group-append\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"btn btn-secondary\"\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tid=\"button-comment\"\r\n\t\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t+ Comment\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\r\n\t\t\t<CommentsList taskId={taskId} />\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport {useParams} from '@reach/router' // -- NOTE gets the dynamic segment directly from the url instead of being passed as a prop. useful because we are using the middleware ProtectedRoute\r\nimport TaskForm from '../components/TaskForm'\r\nimport CommentsSection from '../components/CommentsSection'\r\n\r\nexport default function TaskPage() {\r\n\tconst taskId = useParams().taskId\r\n\r\n\t// -- if there is no task number provided(i.e. creating a new task)\r\n\tif (taskId === undefined) {\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<TaskForm taskId={null} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\t// *** TODO below\r\n\t// -- this path is reachable when the url with a taskId is bookmarked (and the user is logged in), implement the following:\r\n\t// -- 1. if the task id no longer exist ->\r\n\t// if (!confirmTaskIdExist(taskId)) {\r\n\t// \treturn <h1>The task you are looking for doesn't exist</h1>\r\n\t// }\r\n\t// -- 2. set restriction rights to access only the authorized tasks\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<TaskForm taskId={taskId} />\r\n\t\t\t<h4 className=\"text-primary mt-3\">Comment List:</h4>\r\n\t\t\t<CommentsSection taskId={taskId} />\r\n\t\t</div>\r\n\t)\r\n}\r\n","// *** Make this page nicer\r\n\r\nexport default function NotFound() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div>404: Page not founh</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import firebase from 'firebase/app'\r\nconst db = firebase.firestore()\r\n\r\n// *** Note that it won't resolve while offlined. Need to handle this situation\r\nexport const updateUserInfo = async (userId, ObjToBeSaved) => {\r\n\ttry {\r\n\t\tconst docReference = db.collection('users').doc(userId)\r\n\t\tawait docReference.update(ObjToBeSaved)\r\n\t\treturn true\r\n\t} catch (error) {\r\n\t\treturn false\r\n\t}\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useParams} from '@reach/router' // -- NOTE gets the dynamic segment directly from the url instead of being passed as a prop. useful because we are using the middleware ProtectedRoute\r\nimport {getUserInfo} from '../services/user/getUserInfo'\r\nimport {updateUserInfo} from '../services/user/updateUserInfo'\r\nimport ErrorForm from '../components/ErrorForm'\r\n\r\nexport default function EditUserPage() {\r\n\t// -- user id to be modified is taken from the url\r\n\t// *** currently any log-in user can modify other user info (name and jobLevel) as long as they have the user's unique firestore id number. To set restrictions based on jobLevel\r\n\tconst userId = useParams().userId\r\n\r\n\t// *** adding an email and password update feature means accessing firebase.auth(). This project will just stick with just database changes for now (firestore)\r\n\t// -- updating the jobLevel will change access right to the app\r\n\tconst [existingData, setExistingData] = useState({\r\n\t\tname: '',\r\n\t\tjobLevel: '',\r\n\t})\r\n\tconst [newData, setNewData] = useState({\r\n\t\tname: '',\r\n\t\tjobLevel: '',\r\n\t})\r\n\tconst [errorMessage, setErrorMessage] = useState(null)\r\n\r\n\t// -- initial load of existing user information on mount of component\r\n\tuseEffect(() => {\r\n\t\tasync function loadUserData() {\r\n\t\t\tconst userObj = await getUserInfo(userId)\r\n\t\t\tsetExistingData({name: userObj.name, jobLevel: userObj.jobLevel})\r\n\t\t\tsetNewData({name: userObj.name, jobLevel: userObj.jobLevel})\r\n\t\t}\r\n\t\tloadUserData()\r\n\t}, [userId])\r\n\r\n\t// -- Activate/Deactivate submit button by checking if the user changed the initial information\r\n\tuseEffect(() => {\r\n\t\tconst buttonRef = document.querySelector('#submitButton')\r\n\t\tif (\r\n\t\t\tnewData.name === existingData.name &&\r\n\t\t\tnewData.jobLevel === existingData.jobLevel\r\n\t\t) {\r\n\t\t\t// -- assigned the 'disabled' attribute to the button element\r\n\t\t\tbuttonRef.attributes.setNamedItem(document.createAttribute('disabled'))\r\n\t\t} else {\r\n\t\t\tif (buttonRef.hasAttribute('disabled')) {\r\n\t\t\t\tbuttonRef.attributes.removeNamedItem('disabled')\r\n\t\t\t}\r\n\t\t}\r\n\t}, [newData, existingData])\r\n\r\n\t// -- record user's changes to the state\r\n\tfunction handleChange(e) {\r\n\t\tsetNewData({\r\n\t\t\t...newData,\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t})\r\n\t}\r\n\r\n\tasync function handleSubmit(e) {\r\n\t\te.preventDefault()\r\n\t\tlet ObjToBeSaved = {name: newData.name, jobLevel: newData.jobLevel}\r\n\r\n\t\tlet result = await updateUserInfo(userId, ObjToBeSaved)\r\n\r\n\t\tif (result) {\r\n\t\t\talert('record updated') // **** modal/toast that update has been saved\r\n\t\t\tsetExistingData(ObjToBeSaved)\r\n\t\t\t// -- Once setExistingData(ObjToBeSaved) is triggered, the useEffect to Activate/Deactivate kicks in and disables the button again\r\n\t\t} else {\r\n\t\t\tsetErrorMessage('Trouble updating the information. Please try again.')\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className=\"mt-3\" onSubmit={handleSubmit}>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t<div className=\"col-lg-8\">\r\n\t\t\t\t\t\t<div className=\"card bg-light\">\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<h3 className=\"font-weight-light mb-3\">\r\n\t\t\t\t\t\t\t\t\tEdit User Information\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t<div className=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t{errorMessage ? (\r\n\t\t\t\t\t\t\t\t\t\t<ErrorForm errorMessage={errorMessage} />\r\n\t\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\t\t<section className=\"col-sm-12 form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control-label sr-only\"\r\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tName\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"true\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control border border-primary\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={newData.name}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"form-row\">\r\n\t\t\t\t\t\t\t\t\t<section className=\"col-sm-12 form-group\">\r\n\t\t\t\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control-label sr-only\"\r\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"name\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tJob Level\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"custom-select\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"jobLevel\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"jobLevel\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={newData.jobLevel}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* Form is prevented from being submitted when the job level is not selecetd thanks to the 'required' property above and the value='' below  */}\r\n\t\t\t\t\t\t\t\t\t\t\t<option defaultValue value=\"\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tJob Level...\r\n\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"L1\">L1: General Employee</option>\r\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"L2\">L2: Supervisor</option>\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</section>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"form-group text-right mb-0\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tid=\"submitButton\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-secondary\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tUpdate Info\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport {navigate} from '@reach/router'\r\n\r\n// -- service that takes only display the component if the user has logged in, else they get redirected to the login page\r\n// -- protected routes will show 'Loading' until the user has been resolved\r\nexport const ProtectedRoute = ({isLoading, isAuth, children}) => {\r\n\tif (isLoading) {\r\n\t\treturn <div>Loading...</div> // -- displayed until user credentials are loaded\r\n\t}\r\n\r\n\t// -- ** insert feature: floating modal to remind of logging 1st ** -- //\r\n\r\n\tif (!isAuth) {\r\n\t\tnavigate('/login')\r\n\t}\r\n\r\n\treturn children\r\n}\r\n","import {useEffect, useState} from 'react'\r\nimport {addAuthListener} from './addAuthListener'\r\nimport {getCurrentAuthUser} from './getCurrentAuthUser'\r\n\r\n/*\r\nuseAuth is a custom React Hook. \r\nhttps://reactjs.org/docs/hooks-custom.html\r\nOn user login status change, it load and return the login credentials (+ simple coded isLoading status) to authInfo \r\n*/\r\nexport const useAuth = () => {\r\n\tconst [authInfo, setAuthInfo] = useState(() => {\r\n\t\tconst authUser = getCurrentAuthUser()\r\n\t\tconst isLoading = !authUser\r\n\t\treturn {isLoading, authUser}\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = addAuthListener((authUser) => {\r\n\t\t\tsetAuthInfo({isLoading: false, authUser})\r\n\t\t\t// -- isLoading true on initial mount, and will be false thereafter because we now have a defined value for authUser (either null or user data)\r\n\t\t})\r\n\t\treturn unsubscribe // -- basically means that React will automatically call this unsubscribe function when the hook/component unmounts --- a clean up\r\n\t}, []) // -- empty array because only need need to add the listener when component mounts. The listener will stay active until unsubscribed during unmount\r\n\r\n\treturn authInfo // -- the value of the 'user' key will be null when not logged in or when logging out\r\n}\r\n","import firebase from 'firebase/app'\r\n\r\n// Wrapper for Firebase api\r\n// could have used this code directly in useAuth.js, but here we extracted the code to make a wrapper,so that we can easily migrate away from Firebase, if required.\r\nexport const addAuthListener = (callback) => {\r\n\t// -- onChange is an intermediary function that allows us (if desired) to pass exactly what we want to the callback by modifying condation A and condition B\r\n\t// -- this makes sure we are not locked into the firebase api onAuthStateChanged(), and makes it easier to switch to another service\r\n\tconst onChange = (userCredential) => {\r\n\t\tif (userCredential) {\r\n\t\t\t// -- condition A\r\n\t\t\tcallback({id: userCredential.uid, email: userCredential.email}) // -- we specify specific properties from the user obj to return by onAuthStateChanged(), such as {id: user.uid, email: user.email}\r\n\t\t} else {\r\n\t\t\t// -- condition B: where onAuthStateChanged returns null (logout)\r\n\t\t\tcallback(null)\r\n\t\t}\r\n\t}\r\n\treturn firebase.auth().onAuthStateChanged(onChange) // -- .onAuthStateChanged() passes the user credentials || null to the function onChange\r\n}\r\n","import React from 'react'\r\nimport {Router} from '@reach/router'\r\n// -- initialize firebase\r\nimport './FirebaseConfig'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap'\r\nimport './App.css'\r\n\r\nimport BtnPortfolio from './components/resumeBanner/BtnPortfolio'\r\nimport Navigation from './components/Navigation'\r\nimport HomePage from './pages/HomePage'\r\nimport LoginPage from './pages/LoginPage'\r\nimport RegisterPage from './pages/RegisterPage'\r\nimport DashboardPage from './pages/DashboardPage'\r\nimport TaskPage from './pages/TaskPage'\r\nimport NotFoundPage from './pages/NotFoundPage'\r\nimport EditUserPage from './pages/EditUserPage'\r\n\r\nimport {ProtectedRoute} from './services/general/ProtectedRoute'\r\nimport {useAuth} from './services/firebaseAuth/useAuth'\r\nimport {useFirestoreUserDoc} from './services/user/useFirestoreUserDoc'\r\n\r\nfunction App() {\r\n\tlet userId = null\r\n\t// -- updates when login status changes, 'user' has property user.id and user.email\r\n\tlet {authUser, isLoading} = useAuth()\r\n\t// -- updates when the user profile changes in Firestore\r\n\tif (authUser !== null) {\r\n\t\tuserId = authUser.id // -- NOTE that user obj is returned from Auth(). It has the auto generated property 'uid' instead of 'id'\r\n\t}\r\n\t// -- Listener for changes to the user's profile. Returns null if no one is logged in\r\n\t// -- can simplify this code further by creating a new function called useCurrentFirestoreUserDoc, which has no need for the userId param\r\n\tlet userObj = useFirestoreUserDoc(userId)\r\n\r\n\treturn (\r\n\t\t<div id=\"app\">\r\n\t\t\t<Navigation userObj={userObj} />\r\n\t\t\t<BtnPortfolio />\r\n\t\t\t<Router>\r\n\t\t\t\t<HomePage path=\"/\" isAuth={!!authUser} />\r\n\t\t\t\t<LoginPage path=\"login\" />\r\n\t\t\t\t<RegisterPage path=\"register\" />\r\n\t\t\t\t<ProtectedRoute path=\"/\" isLoading={isLoading} isAuth={!!authUser}>\r\n\t\t\t\t\t<DashboardPage path=\"dashboard\" />\r\n\t\t\t\t\t<EditUserPage path=\"editUser/:userId\" />\r\n\t\t\t\t\t<TaskPage path=\"editTask\" />\r\n\t\t\t\t\t<TaskPage path=\"editTask/:taskId\" />\r\n\t\t\t\t\t<NotFoundPage default />\r\n\t\t\t\t</ProtectedRoute>\r\n\t\t\t</Router>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import firebase from 'firebase/app'\r\nimport {useEffect, useState} from 'react'\r\n// import {getUserInfo} from './getUserInfo'\r\n\r\n// -- React custom hook return the Firestore userObj for a given userId\r\n// -- It will also listen for changes to the doc\r\nexport const useFirestoreUserDoc = function (userId) {\r\n\tconst [userObj, setUserObj] = useState(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userId === null || userId === undefined) {\r\n\t\t\tsetUserObj(null)\r\n\t\t} else {\r\n\t\t\tconst userDocRef = firebase.firestore().collection('users').doc(userId)\r\n\r\n\t\t\tconst unsubscribe = userDocRef.onSnapshot(\r\n\t\t\t\t(snapshot) => {\r\n\t\t\t\t\tsetUserObj({id: userId, ...snapshot.data()})\r\n\t\t\t\t},\r\n\t\t\t\t(error) => {\r\n\t\t\t\t\tthrow new Error('Error finding the user document: ' + error.message)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\treturn () => unsubscribe()\r\n\t\t}\r\n\t}, [userId])\r\n\r\n\treturn userObj\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}